{{- if .Values.options.supportmgr }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: supportmgr
  namespace: {{ .Values.global.namespace }}
  labels:
    app: supportmgr
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount.default }}
  selector:
    matchLabels:
      app: supportmgr
  template:
    metadata:
      labels:
        app: supportmgr
        release: {{ .Release.Name }}
    spec:
{{- if eq .Values.nodeSelector.useNodeSelector true }}
      nodeSelector:
        {{ .Values.nodeSelector.supportmgr.nodeLabel }}
{{- end }}
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      containers:
      - name: supportmgr
        image: "{{ .Values.global.repository }}/{{ .Values.supportmgr.container.name }}:{{ .Values.supportmgr.container.tag }}"
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        securityContext:
          allowPrivilegeEscalation: false
        resources:
          requests:
            memory: {{ .Values.memory.supportmgr }}
            cpu: {{ .Values.cpu.supportmgr }}
        env:
        - name: SMGR_JAVA_OPTS
          value: "$(SUPPORT_JAVA_OPTS)"
        envFrom:
        - configMapRef:
            name: otmm-configmap
{{- if eq .Values.global.useNewRelic "true" }}             
        env:
        - name: NEW_RELIC_APP_NAME
          value: "{{ .Values.supportmgr.service.name }}-{{ .Values.global.namespace }}.$(CF_BASE_URL)"
{{- end }} 
        ports:
        - containerPort: {{ .Values.supportmgr.service.port }}
        readinessProbe:
          httpGet:
            path: /api/v1/hotfix/ping/localhost
            port: {{ .Values.supportmgr.service.port }}
          initialDelaySeconds: 60
          failureThreshold: 10
          periodSeconds: 30 
          timeoutSeconds: 5 
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - /opt/HotfixManager/bin/liveness_probe.sh hotfixmgr.jar
          initialDelaySeconds: 60
          failureThreshold: 10
          periodSeconds: 30
          timeoutSeconds: 5
        volumeMounts:
        - name: otmm-secrets-volume
          mountPath: /opt/HotfixManager/custom
{{- $globcustomkey := .Files.Glob "conf/vault/key.txt" }}
{{- if $globcustomkey }}
        - name: custom-encrypt-key-volume
          mountPath: /opt/etc/key
{{- end }}
      volumes:
      - name: otmm-secrets-volume
        configMap:
          name: otmm-secrets-configmap
{{- $globcustomkey := .Files.Glob "conf/vault/key.txt" }}
{{- if $globcustomkey }}
      - name: custom-encrypt-key-volume
        configMap:
          name: custom-encrypt-key-configmap
{{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.supportmgr.service.name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    app: supportmgr
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  type: {{ .Values.supportmgr.service.type }}
  ports:
    - name: http
      port: {{ .Values.supportmgr.service.port }}
  selector:
    app: supportmgr
    release: {{ .Release.Name }}

{{- end }}
